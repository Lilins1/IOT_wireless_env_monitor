/* DO NOT edit this file, your changes will be overwritten and won't take any effect! */
/* Generated from CFLAGS: -DDEVELHELP -Werror -std=gnu11 -mmcu=atmega256rfr2 -ffunction-sections -fdata-sections -fno-builtin -fshort-enums -ggdb -g3 -Os -DRIOT_APPLICATION="hello-world" -DBOARD_AVR_RSS2="avr-rss2" -DRIOT_BOARD=BOARD_AVR_RSS2 -DCPU_ATMEGA256RFR2="atmega256rfr2" -DRIOT_CPU=CPU_ATMEGA256RFR2 -fwrapv -Wstrict-overflow -fno-common -ffunction-sections -fdata-sections -Wall -Wextra -Wmissing-include-dirs -fno-delete-null-pointer-checks -fdiagnostics-color -Wstrict-prototypes -Wold-style-definition -Wformat=2 -Wcast-align -DCPU_RAM_SIZE=0x8000 -include /home/yang0902/RIOT/examples/Task_3/bin/avr-rss2/riotbuild/riotbuild.h -DRIOT_VERSION="2025.01-devel-393-gcefa1" -DRIOT_VERSION_CODE=RIOT_VERSION_NUM(2025,01,0,0) -DMODULE_ATMEGA_COMMON -DMODULE_ATMEGA_COMMON_PERIPH -DMODULE_ATMEGA_PCINT0 -DMODULE_AUTO_INIT -DMODULE_AUTO_INIT_ZTIMER -DMODULE_AVR8_COMMON -DMODULE_AVR8_COMMON_PERIPH -DMODULE_AVR_LIBC_EXTRA -DMODULE_BOARD -DMODULE_BOARD_COMMON_INIT -DMODULE_BOARDS_COMMON_ATMEGA -DMODULE_CORE -DMODULE_CORE_IDLE_THREAD -DMODULE_CORE_INIT -DMODULE_CORE_LIB -DMODULE_CORE_MSG -DMODULE_CORE_PANIC -DMODULE_CORE_THREAD -DMODULE_CPU -DMODULE_DIV -DMODULE_FRAC -DMODULE_ISRPIPE -DMODULE_LIBC -DMODULE_MALLOC_THREAD_SAFE -DMODULE_PERIPH_COMMON -DMODULE_PERIPH_GPIO -DMODULE_PERIPH_GPIO_LL_INPUT_PULL_UP -DMODULE_PERIPH_GPIO_LL_IRQ_EDGE_TRIGGERED_BOTH -DMODULE_PERIPH_GPIO_LL_IRQ_LEVEL_TRIGGERED_LOW -DMODULE_PERIPH_GPIO_LL_IRQ_UNMASK -DMODULE_PERIPH_GPIO_LL_SWITCH_DIR -DMODULE_PERIPH_INIT -DMODULE_PERIPH_INIT_GPIO -DMODULE_PERIPH_INIT_LED0 -DMODULE_PERIPH_INIT_LED1 -DMODULE_PERIPH_INIT_LED2 -DMODULE_PERIPH_INIT_LED3 -DMODULE_PERIPH_INIT_LED4 -DMODULE_PERIPH_INIT_LED5 -DMODULE_PERIPH_INIT_LED6 -DMODULE_PERIPH_INIT_LED7 -DMODULE_PERIPH_INIT_LEDS -DMODULE_PERIPH_INIT_PM -DMODULE_PERIPH_INIT_TIMER -DMODULE_PERIPH_INIT_UART -DMODULE_PERIPH_PM -DMODULE_PERIPH_TIMER -DMODULE_PERIPH_UART -DMODULE_PM_LAYERED -DMODULE_PREPROCESSOR -DMODULE_PREPROCESSOR_SUCCESSOR -DMODULE_SHELL -DMODULE_STDIN -DMODULE_STDIO -DMODULE_STDIO_AVAILABLE -DMODULE_STDIO_UART -DMODULE_STDIO_UART_RX -DMODULE_SYS -DMODULE_TINY_STRERROR -DMODULE_TINY_STRERROR_AS_STRERROR -DMODULE_TSRB -DMODULE_XTIMER -DMODULE_ZTIMER -DMODULE_ZTIMER_CONVERT -DMODULE_ZTIMER_CONVERT_FRAC -DMODULE_ZTIMER_CONVERT_SHIFT -DMODULE_ZTIMER_CORE -DMODULE_ZTIMER_EXTEND -DMODULE_ZTIMER_INIT -DMODULE_ZTIMER_PERIPH_TIMER -DMODULE_ZTIMER_USEC -DMODULE_ZTIMER_XTIMER_COMPAT */
/*
 * Copyright (C) 2024 Otto-von-Guericke-Universit√§t Magdeburg
 *
 * This file is subject to the terms and conditions of the GNU Lesser General
 * Public License v2.1. See the file LICENSE in the top level directory for more
 * details.
 */

/**
 * @defgroup    config_riotbuild    riotbuild.h: Preprocessor Constants to Query the Build System Configuration
 * @ingroup     config
 *
 * The RIOT build system generates a header file `riotbuild.h` that is included
 * in every C compilation unit by passing the `-include` flag to the C compiler.
 * Hence, it provides a set of macros that are unconditionally available and
 * can be used by C code to query the build system configuration.
 * @{
 */

#ifdef DOXYGEN
/**
 * @brief   The used RIOT version as human readable string literal, e.g., for
 *          printing to stdio or writing to a log.
 */
#define RIOT_VERSION "<YEAR_OF_RELEASE>.<MONTH_OF_RELEASE>-<POSTFIX>"

/**
 * @brief   The used RIOT version as machine readable number, e.g., for testing
 *          whether new APIs are available.
 *
 * @see     RIOT_VERSION_NUM
 */
#define RIOT_VERSION_CODE   RIOT_VERSION_NUM(<YEAR>,<MONTH>,<PATCH>,<EXTRA>)

/**
 * @brief   Name of the RIOT application as string literal
 *
 * The string is defined in the applications `Makefile` using the `APPLICATION`
 * variable.
 */
#define RIOT_APPLICATION    "<RIOT_APP_NAME>"

/**
 * @brief   Name of the board the app is compiled for as string literal
 */
#define RIOT_BOARD          "<BOARD_NAME>"

/**
 * @brief   Name of the MCU the app is compiled for as string literal
 *
 * This is the name of the MCU family in terms of RIOT's peripheral drivers,
 * or in other words, the folder name in the `cpu` folder in RIOT's repo root
 * used.
 */
#define RIOT_CPU            "<CPU_FOLDER_NAME>"

/**
 * @brief   Size of the RAM in Bytes
 *
 * @warning Not every CPU family provides this, it will be undefined if
 *          not provided
 */
#define CPU_RAM_SIZE        /* RAM Size in Bytes */
#endif /* DOXYGEN */

/**
 * @brief   Mark a preprocessor macro as deprecated by including this
 *          macro in the definition
 *
 * Usage:
 * ``` C
 * /// @deprecated, use @ref BAR instead of FOO
 * #define FOO          MACRO_DEPRECATED BAR
 * ```
 */
#if defined(DOXYGEN)
#  define MACRO_DEPRECATED    /* implementation */
#elif defined(__GNUC__) || defined(__clang__)
#  define MACRO_DEPRECATED _Pragma("GCC warning \"Code is using a deprecated macro\"")
#else
#  define MACRO_DEPRECATED
#endif

/**
 * @brief   Name of the MCU the app is compiled for as string literal
 *
 * @deprecated  Use @ref RIOT_CPU instead. This will be removed soonest in
 *              release 2025.04
 *
 * This has been renamed to `RIOT_CPU` for consistency. Even though MCU would
 * technically be the better name, CPU is used every else in the source code
 * and folder structure.
 */
#define RIOT_MCU        MACRO_DEPRECATED RIOT_CPU

/** @} */
#define DEVELHELP 1
#define RIOT_APPLICATION "hello-world"
#define BOARD_AVR_RSS2 "avr-rss2"
#define RIOT_BOARD BOARD_AVR_RSS2
#define CPU_ATMEGA256RFR2 "atmega256rfr2"
#define RIOT_CPU CPU_ATMEGA256RFR2
#define CPU_RAM_SIZE 0x8000
#define RIOT_VERSION "2025.01-devel-393-gcefa1"
#define RIOT_VERSION_CODE RIOT_VERSION_NUM(2025,01,0,0)
#define MODULE_ATMEGA_COMMON 1
#define MODULE_ATMEGA_COMMON_PERIPH 1
#define MODULE_ATMEGA_PCINT0 1
#define MODULE_AUTO_INIT 1
#define MODULE_AUTO_INIT_ZTIMER 1
#define MODULE_AVR8_COMMON 1
#define MODULE_AVR8_COMMON_PERIPH 1
#define MODULE_AVR_LIBC_EXTRA 1
#define MODULE_BOARD 1
#define MODULE_BOARD_COMMON_INIT 1
#define MODULE_BOARDS_COMMON_ATMEGA 1
#define MODULE_CORE 1
#define MODULE_CORE_IDLE_THREAD 1
#define MODULE_CORE_INIT 1
#define MODULE_CORE_LIB 1
#define MODULE_CORE_MSG 1
#define MODULE_CORE_PANIC 1
#define MODULE_CORE_THREAD 1
#define MODULE_CPU 1
#define MODULE_DIV 1
#define MODULE_FRAC 1
#define MODULE_ISRPIPE 1
#define MODULE_LIBC 1
#define MODULE_MALLOC_THREAD_SAFE 1
#define MODULE_PERIPH_COMMON 1
#define MODULE_PERIPH_GPIO 1
#define MODULE_PERIPH_GPIO_LL_INPUT_PULL_UP 1
#define MODULE_PERIPH_GPIO_LL_IRQ_EDGE_TRIGGERED_BOTH 1
#define MODULE_PERIPH_GPIO_LL_IRQ_LEVEL_TRIGGERED_LOW 1
#define MODULE_PERIPH_GPIO_LL_IRQ_UNMASK 1
#define MODULE_PERIPH_GPIO_LL_SWITCH_DIR 1
#define MODULE_PERIPH_INIT 1
#define MODULE_PERIPH_INIT_GPIO 1
#define MODULE_PERIPH_INIT_LED0 1
#define MODULE_PERIPH_INIT_LED1 1
#define MODULE_PERIPH_INIT_LED2 1
#define MODULE_PERIPH_INIT_LED3 1
#define MODULE_PERIPH_INIT_LED4 1
#define MODULE_PERIPH_INIT_LED5 1
#define MODULE_PERIPH_INIT_LED6 1
#define MODULE_PERIPH_INIT_LED7 1
#define MODULE_PERIPH_INIT_LEDS 1
#define MODULE_PERIPH_INIT_PM 1
#define MODULE_PERIPH_INIT_TIMER 1
#define MODULE_PERIPH_INIT_UART 1
#define MODULE_PERIPH_PM 1
#define MODULE_PERIPH_TIMER 1
#define MODULE_PERIPH_UART 1
#define MODULE_PM_LAYERED 1
#define MODULE_PREPROCESSOR 1
#define MODULE_PREPROCESSOR_SUCCESSOR 1
#define MODULE_SHELL 1
#define MODULE_STDIN 1
#define MODULE_STDIO 1
#define MODULE_STDIO_AVAILABLE 1
#define MODULE_STDIO_UART 1
#define MODULE_STDIO_UART_RX 1
#define MODULE_SYS 1
#define MODULE_TINY_STRERROR 1
#define MODULE_TINY_STRERROR_AS_STRERROR 1
#define MODULE_TSRB 1
#define MODULE_XTIMER 1
#define MODULE_ZTIMER 1
#define MODULE_ZTIMER_CONVERT 1
#define MODULE_ZTIMER_CONVERT_FRAC 1
#define MODULE_ZTIMER_CONVERT_SHIFT 1
#define MODULE_ZTIMER_CORE 1
#define MODULE_ZTIMER_EXTEND 1
#define MODULE_ZTIMER_INIT 1
#define MODULE_ZTIMER_PERIPH_TIMER 1
#define MODULE_ZTIMER_USEC 1
#define MODULE_ZTIMER_XTIMER_COMPAT 1
